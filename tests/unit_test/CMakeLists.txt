include_directories(../tgw_crypto)

if(UNIX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wl,--no-as-needed -static-libstdc++ -static-libgcc -fPIC")
else()
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_CRT_SECURE_NO_WARNINGS -DTGW_CRYPTO_API_STATIC")
endif()

# build tgw_crypto.a
set(SOURCE_FILES ../tgw_crypto/tgw_crypto.cpp ../tgw_crypto/hardware_util.cpp ../tgw_crypto/tgw_crypto.h)
if(UNIX)
add_library(tgw_crypto_a ${SOURCE_FILES})
SET_TARGET_PROPERTIES(tgw_crypto_a PROPERTIES OUTPUT_NAME "tgw_crypto")
else()
add_library(tgw_crypto_a ${SOURCE_FILES})
SET_TARGET_PROPERTIES(tgw_crypto_a PROPERTIES OUTPUT_NAME "tgw_crypto-static")
endif()

# build test_tgw_crypto
set(SOURCE_FILES test_tgw_crypto.cpp ../tgw_crypto/tgw_crypto.h)
add_executable(test_tgw_crypto ${SOURCE_FILES})
#gtest.a gtest_main.a
if(UNIX)
target_link_libraries(test_tgw_crypto tgw_crypto  pthread)
else()
target_link_libraries(test_tgw_crypto tgw_crypto-static libcrypto-static)
set_target_properties(test_tgw_crypto PROPERTIES COMPILE_FLAGS "/wd4251 /wd4819 /wd4996 /wd4273 /wd4275")
endif()

set(SOURCE_FILES main.cpp db_engine_test.h)
add_executable(utest ${SOURCE_FILES})
if(UNIX)
target_link_libraries(utest tinker_db tinker_crypto)
else()
target_link_libraries(utest tinker_db tinker_crypto)
set_target_properties(utest PROPERTIES COMPILE_FLAGS "/wd4251 /wd4819 /wd4275 /wd4273 /wd4003")
endif()

set(SOURCE_FILES log_test.cpp)
add_executable(log_test ${SOURCE_FILES})
if(UNIX)
target_link_libraries(log_test tinker_db)
else()
target_link_libraries(log_test tinker_db)
set_target_properties(log_test PROPERTIES COMPILE_FLAGS "/wd4251 /wd4819 /wd4275")
endif()

# build test_rw_lock
set(SOURCE_FILES test_rw_lock.cpp)
add_executable(test_rw_lock ${SOURCE_FILES})
if(UNIX)
    target_link_libraries(test_rw_lock pthread)
else()
    target_link_libraries(test_rw_lock)
#    set_target_properties(test_rw_lock PROPERTIES COMPILE_FLAGS "/wd4251 /wd4819 /wd4996 /wd4273 /wd4275")
endif()
